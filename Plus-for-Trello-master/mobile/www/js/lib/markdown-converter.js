var Markdown; Markdown = "object" === typeof exports && "function" === typeof require ? exports : {};
(function () {
    function v(e) { return e } function A(e) { return !1 } function B() { } function C() { } B.prototype = { chain: function (e, m) { var t = this[e]; if (!t) throw Error("unknown hook " + e); this[e] = t === v ? m : function (e) { var l = Array.prototype.slice.call(arguments, 0); l[0] = t.apply(null, l); return m.apply(null, l) } }, set: function (e, m) { if (!this[e]) throw Error("unknown hook " + e); this[e] = m }, addNoop: function (e) { this[e] = v }, addFalse: function (e) { this[e] = A } }; Markdown.HookCollection = B; C.prototype = {
        set: function (e, m) { this["s_" + e] = m }, get: function (e) {
            return this["s_" +
            e]
        }
    }; Markdown.Converter = function (e) {
        function m(a) { return a = a.replace(/^[ ]{0,3}\[([^\[\]]+)\]:[ \t]*\n?[ \t]*<?(\S+?)>?(?=\s|$)[ \t]*\n?[ \t]*((\n*)["(](.+?)[")][ \t]*)?(?:\n+)/gm, function (a, d, b, h, n, g) { d = d.toLowerCase(); p.set(d, J(b)); if (n) return h; g && q.set(d, g.replace(/"/g, "&quot;")); return "" }) } function t(a) {
            a = a.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del)\b[^\r]*?\n<\/\2>[ \t]*(?=\n+))/gm, l); a = a.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math)\b[^\r]*?.*<\/\2>[ \t]*(?=\n+)\n)/gm,
            l); a = a.replace(/\n[ ]{0,3}((<(hr)\b([^<>])*?\/?>)[ \t]*(?=\n{2,}))/g, l); a = a.replace(/\n\n[ ]{0,3}(<!(--(?:|(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>[ \t]*(?=\n{2,}))/g, l); return a = a.replace(/(?:\n\n)([ ]{0,3}(?:<([?%])[^\r]*?\2>)[ \t]*(?=\n{2,}))/g, l)
        } function I(a) { a = a.replace(/(^\n+|\n+$)/g, ""); return "\n\n~K" + (w.push(a) - 1) + "K\n\n" } function l(a, c) { return I(c) } function x(a, c) {
            a = k.preBlockGamut(a, K); a = R(a); a = a.replace(/^[ ]{0,2}([ ]?\*[ ]?){3,}[ \t]*$/gm, "<hr />\n"); a = a.replace(/^[ ]{0,2}([ ]?-[ ]?){3,}[ \t]*$/gm,
            "<hr />\n"); a = a.replace(/^[ ]{0,2}([ ]?_[ ]?){3,}[ \t]*$/gm, "<hr />\n"); a = L(a); a = S(a); a = T(a); a = k.postBlockGamut(a, K); a = t(a); return a = U(a, c)
        } function u(a) {
            a = k.preSpanGamut(a); a = V(a); a = A(a); a = a.replace(/\\(\\)/g, D); a = a.replace(/\\([`*_{}\[\]()>#+-.!])/g, D); -1 !== a.indexOf("![") && (a = a.replace(/(!\[(.*?)\][ ]?(?:\n[ ]*)?\[(.*?)\])()()()()/g, M), a = a.replace(/(!\[(.*?)\]\s?\([ \t]*()<?(\S+?)>?[ \t]*((['"])(.*?)\6[ \t]*)?\))/g, M)); -1 !== a.indexOf("[") && (a = a.replace(/(\[((?:\[[^\]]*\]|[^\[\]])*)\][ ]?(?:\n[ ]*)?\[(.*?)\])()()()()/g,
            E), a = a.replace(/(\[((?:\[[^\]]*\]|[^\[\]])*)\]\([ \t]*()<?((?:\([^)]*\)|[^()\s])*?)>?[ \t]*((['"])(.*?)\6[ \t]*)?\))/g, E), a = a.replace(/(\[([^\[\]]+)\])()()()()()/g, E)); a = W(a); a = a.replace(/~P/g, "://"); a = J(a); a = X(a); a = a.replace(/  +\n/g, " <br>\n"); return a = k.postSpanGamut(a)
        } function A(a) { return a = a.replace(/(<[a-z\/!$]("[^"]*"|'[^']*'|[^'">])*>|<!(--(?:|(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>)/gi, function (a) { var d = a.replace(/(.)<\/?code>(?=.)/g, "$1`"); return d = r(d, "!" == a.charAt(1) ? "\\`*_/" : "\\`*_") }) }
        function E(a, c, d, b, h, n, g, f) { void 0 == f && (f = ""); a = d.replace(/:\/\//g, "~P"); b = b.toLowerCase(); if ("" == h) if ("" == b && (b = a.toLowerCase().replace(/ ?\n/g, " ")), void 0 != p.get(b)) h = p.get(b), void 0 != q.get(b) && (f = q.get(b)); else if (-1 < c.search(/\(\s*\)$/m)) h = ""; else return c; h = N(h); c = '<a href="' + h + '"'; "" != f && (f = y(f), f = r(f, "*_"), c += ' title="' + f + '"'); return c + (">" + a + "</a>") } function y(a) { return a.replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;") } function M(a, c, d, b, h, n, g, f) {
            a =
            d; b = b.toLowerCase(); f || (f = ""); if ("" == h) if ("" == b && (b = a.toLowerCase().replace(/ ?\n/g, " ")), void 0 != p.get(b)) h = p.get(b), void 0 != q.get(b) && (f = q.get(b)); else return c; a = r(y(a), "*_[]()"); h = r(h, "*_"); c = '<img src="' + h + '" alt="' + a + '"'; f = y(f); f = r(f, "*_"); return c = c + (' title="' + f + '"') + " />"
        } function R(a) {
            a = a.replace(/^(.+)[ \t]*\n=+[ \t]*\n+/gm, function (a, d) { return "<h1>" + u(d) + "</h1>\n\n" }); a = a.replace(/^(.+)[ \t]*\n-+[ \t]*\n+/gm, function (a, d) { return "<h2>" + u(d) + "</h2>\n\n" }); return a = a.replace(/^(\#{1,6})[ \t]*(.+?)[ \t]*\#*\n+/gm,
            function (a, d, b) { a = d.length; return "<h" + a + ">" + u(b) + "</h" + a + ">\n\n" })
        } function L(a, c) {
            a += "~0"; var d = /^(([ ]{0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(~0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/gm; z ? a = a.replace(d, function (a, h, d) { a = -1 < d.search(/[*+-]/g) ? "ul" : "ol"; var g; "ol" === a && (g = parseInt(d, 10)); h = O(h, a, c); h = h.replace(/\s+$/, ""); d = "<" + a; g && 1 !== g && (d += ' start="' + g + '"'); return d + ">" + h + "</" + a + ">\n" }) : (d = /(\n\n|^\n?)(([ ]{0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(~0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/g,
            a = a.replace(d, function (a, c, d, g) { a = -1 < g.search(/[*+-]/g) ? "ul" : "ol"; var f; "ol" === a && (f = parseInt(g, 10)); d = O(d, a); g = "<" + a; f && 1 !== f && (g += ' start="' + f + '"'); return c + g + ">\n" + d + "</" + a + ">\n" })); return a = a.replace(/~0/, "")
        } function O(a, c, d) {
            z++; a = a.replace(/\n{2,}$/, "\n"); c = Y[c]; var b = !1; a = (a + "~0").replace(new RegExp("(^[ \\t]*)(" + c + ")[ \\t]+([^\\r]+?(\\n+))(?=(~0|\\1(" + c + ")[ \\t]+))", "gm"), function (a, c, g, f) {
                a = f; (c = /\n\n$/.test(a)) || -1 < a.search(/\n{2,}/) || b ? a = x(F(a), !0) : (a = L(F(a), !0), a = a.replace(/\n$/, ""),
                d || (a = u(a))); b = c; return "<li>" + a + "</li>\n"
            }); a = a.replace(/~0/g, ""); z--; return a
        } function S(a) { a = (a + "~0").replace(/(?:\n\n|^\n?)((?:(?:[ ]{4}|\t).*\n+)+)(\n*[ ]{0,3}[^ \t\n]|(?=~0))/g, function (a, d, b) { a = P(F(d)); a = Q(a); a = a.replace(/^\n+/g, ""); a = a.replace(/\n+$/g, ""); a = "<pre><code>" + a + "\n</code></pre>"; return "\n\n" + a + "\n\n" + b }); return a = a.replace(/~0/, "") } function V(a) {
            return a = a.replace(/(^|[^\\`])(`+)(?!`)([^\r]*?[^`])\2(?!`)/gm, function (a, d, b, h, n) {
                a = h.replace(/^([ \t]*)/g, ""); a = a.replace(/[ \t]*$/g,
                ""); a = P(a); a = a.replace(/:\/\//g, "~P"); return d + "<code>" + a + "</code>"
            })
        } function P(a) { a = a.replace(/&/g, "&amp;"); a = a.replace(/</g, "&lt;"); a = a.replace(/>/g, "&gt;"); return a = r(a, "*_{}[]\\", !1) } function Z(a) { if (-1 === a.indexOf("*") && -1 === a.indexOf("_")) return a; a = G(a); a = a.replace(/(^|[\W_])(?:(?!\1)|(?=^))(\*|_)\2(?=\S)([^\r]*?\S)\2\2(?!\2)(?=[\W_]|$)/g, "$1<strong>$3</strong>"); a = a.replace(/(^|[\W_])(?:(?!\1)|(?=^))(\*|_)(?=\S)((?:(?!\2)[^\r])*?\S)\2(?!\2)(?=[\W_]|$)/g, "$1<em>$3</em>"); return H(a) } function aa(a) {
            if (-1 ===
            a.indexOf("*") && -1 === a.indexOf("_")) return a; a = G(a); a = a.replace(/(?=[^\r][*_]|[*_])(^|(?=\W__|(?!\*)[\W_]\*\*|\w\*\*\w)[^\r])(\*\*|__)(?!\2)(?=\S)((?:|[^\r]*?(?!\2)[^\r])(?=\S_|\w|\S\*\*(?:[\W_]|$)).)(?=__(?:\W|$)|\*\*(?:[^*]|$))\2/g, "$1<strong>$3</strong>"); a = a.replace(/(?=[^\r][*_]|[*_])(^|(?=\W_|(?!\*)(?:[\W_]\*|\D\*(?=\w)\D))[^\r])(\*|_)(?!\2\2\2)(?=\S)((?:(?!\2)[^\r])*?(?=[^\s_]_|(?=\w)\D\*\D|[^\s*]\*(?:[\W_]|$)).)(?=_(?:\W|$)|\*(?:[^*]|$))\2/g, "$1<em>$3</em>"); return H(a)
        } function T(a) {
            return a =
            a.replace(/((^[ \t]*>[ \t]?.+\n(.+\n)*\n*)+)/gm, function (a, d) { var b; b = d.replace(/^[ \t]*>[ \t]?/gm, "~0"); b = b.replace(/~0/g, ""); b = b.replace(/^[ \t]+$/gm, ""); b = x(b); b = b.replace(/(^|\n)/g, "$1  "); b = b.replace(/(\s*<pre>[^\r]+?<\/pre>)/gm, function (a, b) { var d; d = b.replace(/^  /mg, "~0"); return d = d.replace(/~0/g, "") }); return I("<blockquote>\n" + b + "\n</blockquote>") })
        } function U(a, c) {
            a = a.replace(/^\n+/g, ""); a = a.replace(/\n+$/g, ""); for (var d = a.split(/\n{2,}/g), b = [], h = /~K(\d+)K/, n = d.length, g = 0; g < n; g++) {
                var f =
                d[g]; h.test(f) ? b.push(f) : /\S/.test(f) && (f = u(f), f = f.replace(/^([ \t]*)/g, "<p>"), f += "</p>", b.push(f))
            } if (!c) for (n = b.length, g = 0; g < n; g++) for (var e = !0; e;) e = !1, b[g] = b[g].replace(/~K(\d+)K/g, function (a, b) { e = !0; return w[b] }); return b.join("\n\n")
        } function J(a) { a = a.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\w+);)/g, "&amp;"); return a = a.replace(/<(?![a-z\/?!]|~D)/gi, "&lt;") } function ba(a, c, d, b) {
            if (c) return a; if (")" !== b.charAt(b.length - 1)) return "<" + d + b + ">"; a = b.match(/[()]/g); for (var h = c = 0; h < a.length; h++) "(" === a[h] ?
            0 >= c ? c = 1 : c++ : c--; var e = ""; 0 > c && (b = b.replace(new RegExp("\\){1," + -c + "}$"), function (a) { e = a; return "" })); e && (a = b.charAt(b.length - 1), ca.test(a) || (e = a + e, b = b.substr(0, b.length - 1))); return "<" + d + b + ">" + e
        } function W(a) { a = a.replace(da, ba); return a = a.replace(/<((https?|ftp):[^'">\s]+)>/gi, function (a, d) { return '<a href="' + N(d) + '">' + k.plainLinkText(d) + "</a>" }) } function ea(a) { return a = a.replace(/~E(\d+)E/g, function (a, d) { var b = parseInt(d); return String.fromCharCode(b) }) } function F(a) {
            a = a.replace(/^(\t|[ ]{1,4})/gm,
            "~0"); return a = a.replace(/~0/g, "")
        } function Q(a) { if (!/\t/.test(a)) return a; var c = ["    ", "   ", "  ", " "], d = 0, b; return a.replace(/[\n\t]/g, function (a, e) { if ("\n" === a) return d = e + 1, a; b = (e - d) % 4; d = e + 1; return c[b] }) } function N(a) { a = y(a); return a = r(a, "*_:()[]") } function r(a, c, d) { c = "([" + c.replace(/([\[\]\\])/g, "\\$1") + "])"; d && (c = "\\\\" + c); return a = a.replace(new RegExp(c, "g"), D) } function D(a, c) { return "~E" + c.charCodeAt(0) + "E" } var k = this.hooks = new B; k.addNoop("plainLinkText"); k.addNoop("preConversion"); k.addNoop("postNormalization");
        k.addNoop("preBlockGamut"); k.addNoop("postBlockGamut"); k.addNoop("preSpanGamut"); k.addNoop("postSpanGamut"); k.addNoop("postConversion"); var p, q, w, z; e = e || {}; var G = v, H = v; e.nonAsciiLetters && function () {
            var a = /[Q\u00aa\u00b5\u00ba\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376-\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0523\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0621-\u064a\u0660-\u0669\u066e-\u066f\u0671-\u06d3\u06d5\u06e5-\u06e6\u06ee-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07c0-\u07ea\u07f4-\u07f5\u07fa\u0904-\u0939\u093d\u0950\u0958-\u0961\u0966-\u096f\u0971-\u0972\u097b-\u097f\u0985-\u098c\u098f-\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc-\u09dd\u09df-\u09e1\u09e6-\u09f1\u0a05-\u0a0a\u0a0f-\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32-\u0a33\u0a35-\u0a36\u0a38-\u0a39\u0a59-\u0a5c\u0a5e\u0a66-\u0a6f\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2-\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0-\u0ae1\u0ae6-\u0aef\u0b05-\u0b0c\u0b0f-\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32-\u0b33\u0b35-\u0b39\u0b3d\u0b5c-\u0b5d\u0b5f-\u0b61\u0b66-\u0b6f\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99-\u0b9a\u0b9c\u0b9e-\u0b9f\u0ba3-\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0be6-\u0bef\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58-\u0c59\u0c60-\u0c61\u0c66-\u0c6f\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0-\u0ce1\u0ce6-\u0cef\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d28\u0d2a-\u0d39\u0d3d\u0d60-\u0d61\u0d66-\u0d6f\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32-\u0e33\u0e40-\u0e46\u0e50-\u0e59\u0e81-\u0e82\u0e84\u0e87-\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa-\u0eab\u0ead-\u0eb0\u0eb2-\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0ed0-\u0ed9\u0edc-\u0edd\u0f00\u0f20-\u0f29\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8b\u1000-\u102a\u103f-\u1049\u1050-\u1055\u105a-\u105d\u1061\u1065-\u1066\u106e-\u1070\u1075-\u1081\u108e\u1090-\u1099\u10a0-\u10c5\u10d0-\u10fa\u10fc\u1100-\u1159\u115f-\u11a2\u11a8-\u11f9\u1200-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u1676\u1681-\u169a\u16a0-\u16ea\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u17e0-\u17e9\u1810-\u1819\u1820-\u1877\u1880-\u18a8\u18aa\u1900-\u191c\u1946-\u196d\u1970-\u1974\u1980-\u19a9\u19c1-\u19c7\u19d0-\u19d9\u1a00-\u1a16\u1b05-\u1b33\u1b45-\u1b4b\u1b50-\u1b59\u1b83-\u1ba0\u1bae-\u1bb9\u1c00-\u1c23\u1c40-\u1c49\u1c4d-\u1c7d\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u203f-\u2040\u2054\u2071\u207f\u2090-\u2094\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2183-\u2184\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2c6f\u2c71-\u2c7d\u2c80-\u2ce4\u2d00-\u2d25\u2d30-\u2d65\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3006\u3031-\u3035\u303b-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31b7\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fc3\ua000-\ua48c\ua500-\ua60c\ua610-\ua62b\ua640-\ua65f\ua662-\ua66e\ua67f-\ua697\ua717-\ua71f\ua722-\ua788\ua78b-\ua78c\ua7fb-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8d0-\ua8d9\ua900-\ua925\ua930-\ua946\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa50-\uaa59\uac00-\ud7a3\uf900-\ufa2d\ufa30-\ufa6a\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe33-\ufe34\ufe4d-\ufe4f\ufe70-\ufe74\ufe76-\ufefc\uff10-\uff19\uff21-\uff3a\uff3f\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]/g;
            G = function (c) { return c.replace(a, function (a) { a = a.charCodeAt(0); for (var b = "", c; 0 < a;) c = a % 51 + 65, 81 <= c && c++, 90 < c && (c += 6), b = String.fromCharCode(c) + b, a = a / 51 | 0; return "Q" + b + "Q" }) }; H = function (a) { return a.replace(/Q([A-PR-Za-z]{1,3})Q/g, function (a, b) { for (var c = 0, e, g = 0; g < b.length; g++) e = b.charCodeAt(g), 90 < e && (e -= 6), 81 < e && e--, e -= 65, c = 51 * c + e; return String.fromCharCode(c) }) }
        }(); var X = e.asteriskIntraWordEmphasis ? aa : Z; this.makeHtml = function (a) {
            if (p) throw Error("Recursive call to converter.makeHtml"); p = new C; q = new C;
            w = []; z = 0; a = k.preConversion(a); a = a.replace(/~/g, "~T"); a = a.replace(/\$/g, "~D"); a = a.replace(/\r\n/g, "\n"); a = a.replace(/\r/g, "\n"); a = Q("\n\n" + a + "\n\n"); a = a.replace(/^[ \t]+$/mg, ""); a = k.postNormalization(a); a = t(a); a = m(a); a = x(a); a = ea(a); a = a.replace(/~D/g, "$$"); a = a.replace(/~T/g, "~"); a = k.postConversion(a); w = q = p = null; return a
        }; var K = function (a) { return x(a) }, Y = { ol: "\\d+[.]", ul: "[*+-]" }, da = RegExp('(="|<)?\\b(https?|ftp)(://[-A-Z0-9+&@#/%?=~_|[\\]()!:,.;]*[-A-Z0-9+&@#/%=~_|[\\])])(?=$|\\W)', "gi"), ca = /[-A-Z0-9+&@#/%=~_|[\])]/i
    }
})();